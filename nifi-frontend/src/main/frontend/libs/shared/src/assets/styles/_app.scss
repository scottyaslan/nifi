/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin styles() {
    /* other classes and styles */

    html,
    body {
        height: 100%;
    }

    body {
        margin: 0;
    }

    a {
        cursor: pointer;
        display: inline-block;
        text-decoration: underline;
        text-underline-offset: 3px;
    }

    .tooltip {
        max-width: 500px;
        padding: 10px;
        border-radius: 2px;
        border-width: 1px;
        word-wrap: break-word;
        white-space: normal;

        ul {
            list-style: disc outside;
            margin-left: 1em;
        }
    }

    .blank,
    .empty,
    .unset,
    .sensitive {
        font-weight: normal !important;
        font-style: italic !important;
        opacity: 0.8 !important;
    }

    .context-logo {
        text-align: start;
        height: 40px;
    }

    .context-name {
        font-size: 15px;
        line-height: 15px;
        height: 15px;
        width: 225px;
        text-overflow: ellipsis;
        overflow: hidden;
        white-space: nowrap;
    }

    .context-type {
        font-size: 12px;
        line-height: 12px;
    }

    .context-id {
        font-size: 12px;
        line-height: 12px;
    }

    .hidden {
        display: none;
    }

    .pointer {
        cursor: pointer;
    }

    .dialog-tab-content,
    .dialog-content {
        height: 50vh;
    }

    .flex-2 {
        display: flex;
        flex: 2;
        flex-basis: 100%;
    }

    .flex-1a {
        display: flex;
        flex-direction: column;
        flex-basis: 100%;
        flex: 1;
    }

    .fa-rotate-45 {
        transform: rotate(-45deg);
    }

    /* overriding 3rd party styles */

    .mat-mdc-dialog-content {
        --mat-dialog-with-actions-content-padding: 20px 24px;
    }

    .mat-mdc-dialog-actions {
        border: none !important;
    }

    .mat-mdc-dialog-title {
        --mat-dialog-headline-padding: 0 24px 9px;
    }

    .mat-drawer {
        --mat-sidenav-container-width: auto;
        --mat-sidenav-container-shape: 0;
    }

    .mat-mdc-button {
        --mdc-text-button-container-shape: 4px;
        --mdc-text-button-label-text-tracking: normal;
        --mdc-text-button-label-text-weight: 400;
    }

    .mat-mdc-unelevated-button {
        --mdc-filled-button-container-shape: 4px;
        --mdc-filled-button-label-text-tracking: normal;
        --mdc-filled-button-label-text-weight: 400;
    }

    .mat-mdc-outlined-button {
        --mdc-outlined-button-container-shape: 4px;
        --mdc-outlined-button-label-text-tracking: normal;
        --mdc-outlined-button-label-text-weight: 400;
        --mat-outlined-button-horizontal-padding: 15px;
    }

    .mat-mdc-tab-header {
        --mdc-secondary-navigation-tab-container-height: 36px;
        --mat-tab-header-label-text-tracking: normal;
        --mat-tab-header-label-text-weight: 400;
    }

    .mat-tree {
        display: inline !important;
        background-color: unset !important;
    }

    .mat-mdc-card-header-text {
        width: 100%;
    }

    // center input text in form fields
    .mdc-text-field--outlined .mat-mdc-form-field-infix {
        line-height: 24px;
    }

    .mat-expansion-panel {
        --mat-expansion-container-shape: 4px;
    }

    .mat-expansion-panel-body {
        overflow-y: auto;
    }

    .mat-expansion-panel-header.mat-expanded {
        border-bottom-left-radius: 0;
        border-bottom-right-radius: 0;
        --mat-expansion-header-expanded-state-height: 50px;
    }

    .mat-expansion-panel-header-title {
        margin-right: 0 !important;
    }

    .mat-expansion-panel-header-description {
        @apply truncate;
        display: block !important;
    }

    .mat-content.mat-content-hide-toggle {
        margin-right: 0 !important;
        height: 48px;
    }

    .mat-mdc-menu-panel {
        max-width: 420px;

        .fa {
            width: 14px;
            height: 14px;
            text-align: center;
        }

        .icon {
            display: inline-block;
            width: 14px;
            text-align: center;
        }

        .mat-divider {
            --mat-menu-divider-top-spacing: 0;
            --mat-menu-divider-bottom-spacing: 0;
        }
    }

    .cdk-drag-disabled {
        cursor: not-allowed !important;
    }

    .cdk-drag-placeholder {
        opacity: 0;
    }

    .cdk-drop-list-dragging {
        cursor: grabbing;
    }

    .cdk-drag:hover {
        cursor: grab;
    }

    .cdk-list {
        min-height: 34px;
        border-radius: 4px;
        overflow: hidden;
        display: block;
        user-select: none;
    }

    span.grip {
        width: 12px;
        height: 36px;
        display: block;
        line-height: 6px;
        letter-spacing: 1px;
    }

    .cdk-drag:hover {
        span.grip::after {
            content: '.. .. .. .. ..';
        }
    }

    .cdk-drag-disabled {
        font-style: italic;
    }

    .cdk-drag:hover {
        span.grip::after {
            content: '.. .. .. .. ..';
        }
    }

    .mdc-notched-outline__notch {
        border-right: none;
    }

    .CodeMirror-hints {
        z-index: 1000 !important;
        overflow-y: scroll !important;
    }

    .mat-mdc-tab-header {
        user-select: none;
    }

    .mat-mdc-icon-button {
        --mdc-icon-button-state-layer-size: 36px;
        --mdc-icon-button-icon-size: 14px;

        &.mat-mdc-button-base.mdc-icon-button {
            padding: 0;
        }
    }

    .mat-mdc-paginator {
        background-color: unset !important;
    }

    .mat-mdc-dialog-surface {
        --mdc-dialog-container-shape: 4px;
    }

    .mdc-dialog__content {
        font-size: 14px !important;
    }

    .mat-mdc-menu-content .mat-mdc-menu-item {
        min-height: 2.25rem;
    }
}

@mixin generate-material-theme($material-theme, $config) {
    $is-material-dark: if(mat.get-theme-type($material-theme) == dark, true, false);
    $material-theme-primary-palette-default: mat.get-theme-color(
        $material-theme,
        primary,
        map.get(map.get($config, primary), default)
    );
    $material-theme-primary-palette-darker: mat.get-theme-color(
        $material-theme,
        primary,
        map.get(map.get($config, primary), darker)
    );
    $material-theme-primary-palette-lighter: mat.get-theme-color(
        $material-theme,
        primary,
        map.get(map.get($config, primary), lighter)
    );
    $material-theme-secondary-palette-default: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), default)
    );
    $material-theme-secondary-palette-darker: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), darker)
    );
    $material-theme-secondary-palette-lighter: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), lighter)
    );
    $material-theme-tertiary-palette-default: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), default)
    );
    $material-theme-tertiary-palette-darker: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), darker)
    );
    $material-theme-tertiary-palette-lighter: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), lighter)
    );
    $material-theme-error-palette-default: mat.get-theme-color(
        $material-theme,
        error,
        map.get(map.get($config, error), default)
    );
    $material-theme-error-palette-darker: mat.get-theme-color(
        $material-theme,
        error,
        map.get(map.get($config, error), darker)
    );
    $material-theme-error-palette-lighter: mat.get-theme-color(
        $material-theme,
        error,
        map.get(map.get($config, error), lighter)
    );
    $material-theme-neutral-palette-default: mat.get-theme-color(
        $material-theme,
        neutral,
        map.get(map.get($config, neutral), default)
    );
    $material-theme-neutral-palette-darker: mat.get-theme-color(
        $material-theme,
        neutral,
        map.get(map.get($config, neutral), darker)
    );
    $material-theme-neutral-palette-lighter: mat.get-theme-color(
        $material-theme,
        neutral,
        map.get(map.get($config, neutral), lighter)
    );
    $alternate-surface: map.get($config, alternate-surface);
    $primary-contrast: map.get(map.get($config, primary), contrast);
    $secondary-contrast: map.get(map.get($config, secondary), contrast);
    $neutral-contrast: map.get(map.get($config, neutral), contrast);
    $border-color: mat.get-theme-color($material-theme, neutral-variant, map.get($config, neutral-variant));
    $success-default: map.get(map.get($config, success), default);
    $success-darker: map.get(map.get($config, success), darker);
    $success-lighter: map.get(map.get($config, success), lighter);
    $caution: map.get($config, caution);
    $selected-row-color: if(
        $is-material-dark,
        $material-theme-tertiary-palette-darker,
        $material-theme-tertiary-palette-lighter
    );

    // support dark-mode browser default inputs (time, color, ...)
    input {
        color-scheme: if($is-material-dark, dark, light);
    }

    // semantic classes for the material theme

    .primary-contrast {
        color: $primary-contrast;
        fill: $primary-contrast;
    }

    .primary-color {
        color: $material-theme-primary-palette-default;
        fill: $material-theme-primary-palette-default;
    }

    .secondary-contrast {
        color: $secondary-contrast;
        fill: $secondary-contrast;
    }

    .secondary-color {
        color: $material-theme-secondary-palette-default;
        fill: $material-theme-secondary-palette-default;
    }

    .secondary-color-lighter {
        color: $material-theme-secondary-palette-lighter;
        fill: $material-theme-secondary-palette-lighter;
    }

    .tertiary-color {
        color: $material-theme-tertiary-palette-default;
        fill: $material-theme-tertiary-palette-default;
    }

    .error-color {
        color: $material-theme-error-palette-default;
        fill: $material-theme-error-palette-default;
    }

    .error-color-lighter {
        color: $material-theme-error-palette-lighter;
        fill: $material-theme-error-palette-lighter;
    }

    .error-color-darker {
        color: $material-theme-error-palette-darker;
        fill: $material-theme-error-palette-darker;
    }

    .neutral-contrast {
        color: $neutral-contrast;
        fill: $neutral-contrast;
    }

    .neutral-color {
        color: $material-theme-neutral-palette-default;
        fill: $material-theme-neutral-palette-default;
    }

    .success-color {
        color: $success-default;
        fill: $success-default;
    }

    .success-color-lighter {
        color: $success-lighter;
        fill: $success-lighter;
    }

    .success-color-darker {
        color: $success-darker;
        fill: $success-darker;
    }

    .caution-color {
        color: $caution;
        fill: $caution;
    }

    // semantic classes for contrast colors determined based on the light/dark mode of the theme.

    // will be black for light mode and white for dark mode
    .neutral-contrast {
        color: $neutral-contrast;
        fill: $neutral-contrast;
    }

    // will be a darker light grey for light mode and a brighter light grey for dark mode
    .border-color {
        color: $border-color;
        fill: $border-color;
    }

    // color variants for theming angular material widgets
    .tertiary-checkbox {
        @include mat.checkbox-color($material-theme, $color-variant: tertiary);
    }

    .primary-icon-button {
        @include mat.icon-button-color($material-theme, $color-variant: primary);
    }

    .error-button {
        @include mat.button-color($material-theme, $color-variant: error);
    }

    .error-spinner {
        @include mat.progress-spinner-color($material-theme, $color-variant: error);
    }

    /* other classes and styles */

    .tooltip {
        background-color: if(
            $is-material-dark,
            $material-theme-neutral-palette-darker,
            $material-theme-neutral-palette-lighter
        );
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
        color: $neutral-contrast;
    }

    .property-editor {
        background-color: var(--mat-menu-container-color);
        border-radius: 4px;
    }

    a {
        color: if(
            $is-material-dark,
            $material-theme-secondary-palette-default,
            $material-theme-secondary-palette-darker
        );
        text-decoration-color: if(
            $is-material-dark,
            $material-theme-secondary-palette-lighter,
            $material-theme-secondary-palette-default
        );
    }

    a:hover {
        text-decoration-color: $material-theme-secondary-palette-default;
    }

    .has-errors,
    .invalid,
    .stopped,
    .running,
    .transmitting,
    .text-shadow {
        text-shadow: if($is-material-dark, 0 0 4px rgba(0, 0, 0, 1), 0 0 4px rgba(255, 255, 255, 1));
    }

    .zero {
        opacity: if($is-material-dark, 0.6, 0.4) !important;
    }

    /* overriding 3rd party styles */

    *:not([class^='mat-']):not([class^='mdc-']):not([class^='resizable-triangle']) {
        // Tailwind sets a default that doesn't shift with light and dark themes
        border-color: $border-color;
    }

    * {
        // Because snackbars have different surface colors, we need to make sure the action color has enough contrast.
        --mat-snack-bar-button-color: if(
            $is-material-dark,
            $material-theme-tertiary-palette-darker,
            $material-theme-tertiary-palette-lighter
        );
    }

    .mat-typography.text-base {
        font-family: mat.get-theme-typography($material-theme, body-medium, font-family);
        line-height: mat.get-theme-typography($material-theme, body-medium, line-height);
        font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
        font-weight: mat.get-theme-typography($material-theme, body-medium, font-weight);
        letter-spacing: normal;

        h2 {
            margin: unset;
            line-height: 28px;
            font-size: 18px;
            font-weight: 700;
        }

        h3 {
            margin: 0 0 16px;
            line-height: 28px;
            font-size: 20px;
            font-weight: 700;
        }

        h4 {
            margin: unset;
            line-height: 20px;
            font-size: 14px;
            font-weight: 400;
        }

        a {
            letter-spacing: normal;
        }

        .mdc-text-field--outlined .mdc-floating-label {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-mdc-select {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-mdc-card-title {
            font-size: 18px;
            letter-spacing: normal;
            line-height: 28px;
            font-weight: 700;
        }

        .mat-mdc-card-subtitle {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: 20px;
            font-weight: 400;
        }

        .mat-mdc-option {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-mdc-form-field {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-tree-node,
        .mat-nested-tree-node {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-mdc-header-cell {
            font-weight: 700;
        }

        .mat-expansion-panel-header {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
            font-weight: 700;
        }

        .mat-expansion-panel-content {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }

        .mat-mdc-menu-content,
        .mat-mdc-menu-content .mat-mdc-menu-item .mat-mdc-menu-item-text {
            --mat-menu-item-label-text-weight: mat.get-theme-typography($material-theme, body-medium, font-weight);
        }

        .mdc-list-item__primary-text {
            font-size: mat.get-theme-typography($material-theme, body-medium, font-size);
            letter-spacing: normal;
            line-height: normal;
        }
    }

    .mat-expansion-panel {
        background-color: $alternate-surface;
    }

    .mat-datepicker-content {
        background-color: $alternate-surface;
        box-shadow:
            0px 2px 4px -1px rgba(0, 0, 0, 0.2),
            0px 4px 5px 0px rgba(0, 0, 0, 0.14),
            0px 1px 10px 0px rgba(0, 0, 0, 0.12);
    }

    .mat-mdc-dialog-surface {
        background-color: $alternate-surface;
    }

    .mat-mdc-table {
        background-color: $alternate-surface;
    }

    .mat-drawer-backdrop.mat-drawer-shown {
        background-color: if($is-material-dark, rgba(189, 189, 189, 0.6), rgba(0, 0, 0, 0.6));
    }

    .mat-mdc-card {
        background-color: $alternate-surface;
    }

    .mat-drawer {
        background-color: $alternate-surface;
    }

    .cdk-drop-list {
        color: if(
            $is-material-dark,
            $material-theme-secondary-palette-default,
            $material-theme-secondary-palette-darker
        );
    }

    .cdk-drop-list-dragging {
        background-color: if(
            $is-material-dark,
            $material-theme-secondary-palette-darker,
            $material-theme-secondary-palette-default
        ) !important;
    }

    .cdk-drag-selected {
        .cdk-drag {
            background-color: if(
                $is-material-dark,
                $material-theme-secondary-palette-default,
                $material-theme-secondary-palette-darker
            );
        }
    }

    .cdk-drop-list {
        background: if(
            $is-material-dark,
            $material-theme-neutral-palette-default,
            $material-theme-neutral-palette-lighter
        );
    }

    .cdk-drag {
        background: if(
            $is-material-dark,
            $material-theme-neutral-palette-darker,
            $material-theme-neutral-palette-lighter
        );
    }

    .cdk-drag-disabled {
        color: $material-theme-neutral-palette-default;
        background: if(
            $is-material-dark,
            $material-theme-neutral-palette-darker,
            $material-theme-neutral-palette-lighter
        ) !important;
    }

    .cdk-drag-selected {
        .cdk-drag {
            color: $primary-contrast;
        }

        span.grip {
            color: $primary-contrast;
        }

        .fa {
            color: $primary-contrast;
        }
    }

    span.grip {
        color: $neutral-contrast;
    }

    ngx-skeleton-loader .skeleton-loader {
        background: $border-color;
    }
}
