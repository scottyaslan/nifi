/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin styles() {
    .listing-table {
        @include mat.table-density(-4);
        border-width: 1px;
        border-style: solid;

        table {
            width: 100%;
            table-layout: fixed;

            td,
            th {
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                padding: 0 8px;
                cursor: default;
            }

            .mat-column-actions {
                width: 52px;
            }
        }
    }

    .informational-table {
        @extend .listing-table;

        table {
            td,
            th {
                text-wrap: wrap;
                padding: 8px;
                word-break: break-word;
            }

            ul {
                list-style-type: disc;
                list-style-position: inside;

                text-wrap: wrap;
                word-break: break-all;
            }
        }
    }

    .mat-sort-header-content {
        overflow: hidden;
    }
}

@mixin generate-theme($material-theme, $config) {
    $is-material-dark: if(mat.get-theme-type($material-theme) == dark, true, false);

    $material-theme-secondary-palette-default: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), default)
    );
    $material-theme-secondary-palette-lighter: mat.get-theme-color(
        $material-theme,
        secondary,
        map.get(map.get($config, secondary), lighter)
    );
    $material-theme-tertiary-palette-darker: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), darker)
    );
    $material-theme-tertiary-palette-lighter: mat.get-theme-color(
        $material-theme,
        tertiary,
        map.get(map.get($config, tertiary), lighter)
    );

    // Get hues from palette
    $selected-row-color: if(
        $is-material-dark,
        $material-theme-tertiary-palette-darker,
        $material-theme-tertiary-palette-lighter
    );

    .listing-table {
        table {
            th {
                @extend .secondary-contrast;
                background-color: if(
                    $is-material-dark,
                    $material-theme-secondary-palette-default,
                    $material-theme-secondary-palette-lighter
                ) !important;
                user-select: none;

                .mat-sort-header-arrow {
                    @extend .secondary-contrast;
                }
            }

            th,
            td {
                border-bottom-width: 1px;
                border-bottom-style: solid;
            }

            tr:hover {
                background-color: var(--mat-menu-item-hover-state-layer-color) !important;
            }

            .selected {
                background-color: $selected-row-color !important;
            }
        }
    }
}
