/*!
 *  Licensed to the Apache Software Foundation (ASF) under one or more
 *  contributor license agreements.  See the NOTICE file distributed with
 *  this work for additional information regarding copyright ownership.
 *  The ASF licenses this file to You under the Apache License, Version 2.0
 *  (the "License"); you may not use this file except in compliance with
 *  the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

@use 'sass:map';
@use '@angular/material' as mat;

@mixin styles() {
    html,
    body {
        height: 100%;
    }

    body {
        margin: 0;
        font-family: Roboto, 'Helvetica Neue', sans-serif;
    }

    a {
        font-size: 13px;
        cursor: pointer;
        font-weight: normal;
        display: inline-block;
        font-family: Roboto;
        text-decoration: underline;
        text-underline-offset: 3px;
    }

    //Icon for styling mat-icon in forms throughout the application.
    .info-icon {
        font-size: 14px;
        height: 14px !important;
        width: 14px !important;
    }

    //This style is needed due to an incompatibility between material and tailwind.
    .mdc-notched-outline__notch {
        border-right: none;
    }

    .small-dialog {
        min-width: 320px;
    }

    .medium-dialog {
        min-width: 470px;
    }

    .medium-short-dialog {
        max-height: 32%;
        max-width: 34%;
        min-height: 250px;
        min-width: 440px;
        font-size: 13px;
    }

    .large-dialog {
        max-height: 72%;
        max-width: 55%;
        min-height: 520px;
        min-width: 760px;
    }

    .xl-dialog {
        max-height: 72%;
        max-width: 85%;
        min-height: 560px;
        min-width: 1024px;
    }

    .edit-parameter-context-dialog {
        max-height: 72%;
        max-width: 55%;
        min-width: 850px;
        min-height: 575px;
    }

    .tooltip {
        position: fixed;
        max-width: 500px;
        padding: 10px;
        border-radius: 2px;
        border-width: 1px;
        font-size: 13px;
        font-family: Roboto;
        font-weight: 400;
        word-wrap: break-word;
        white-space: normal;
        z-index: 1;

        ul {
            list-style: disc outside;
            margin-left: 1em;
        }
    }

    .property-editor {
        font-size: 13px;
        font-family: Roboto;
        font-weight: 400;
    }

    .CodeMirror-hints {
        font-size: 13px !important;
        z-index: 1000 !important;
        overflow-y: scroll !important;
    }

    .blank,
    .unset,
    .sensitive {
        font-weight: normal !important;
    }

    button.nifi-button {
        height: 28px;
        width: 28px;
        line-height: 28px;
    }

    button.nifi-button:hover {
        cursor: pointer;
    }

    button.nifi-button:disabled {
        cursor: not-allowed;
    }

    .pointer {
        cursor: pointer;
    }

    .disabled {
        cursor: not-allowed;
    }

    .value,
    .refresh-timestamp {
        font-weight: 500;
    }
}

@mixin colors($material-theme, $canvas-theme) {
    // Get the color config from the theme.
    $color-config: mat.get-color-config($material-theme);
    $canvas-color-config: mat.get-color-config($canvas-theme);

    // Get the color palette from the color-config.
    $primary-palette: map.get($color-config, 'primary');
    $accent-palette: map.get($color-config, 'accent');
    $warn-palette: map.get($color-config, 'warn');
    $canvas-primary-palette: map.get($canvas-color-config, 'primary');
    $canvas-accent-palette: map.get($canvas-color-config, 'accent');

    // Get hues from palette
    $primary-palette-50: mat.get-color-from-palette($primary-palette, 50);
    $primary-palette-200: mat.get-color-from-palette($primary-palette, 200);
    $primary-palette-500: mat.get-color-from-palette($primary-palette, 500);
    $accent-palette-A100: mat.get-color-from-palette($accent-palette, 'A100');
    $accent-palette-A200: mat.get-color-from-palette($accent-palette, 'A200');
    $accent-palette-A400: mat.get-color-from-palette($accent-palette, 'A400');
    $canvas-primary-palette-50: mat.get-color-from-palette($canvas-primary-palette, 50);
    $canvas-primary-palette-200: mat.get-color-from-palette($canvas-primary-palette, 200);
    $canvas-primary-palette-400: mat.get-color-from-palette($canvas-primary-palette, 400);
    $canvas-primary-palette-900: mat.get-color-from-palette($canvas-primary-palette, 900);
    $canvas-accent-palette-200: mat.get-color-from-palette($canvas-accent-palette, 200);
    $canvas-accent-palette-400: mat.get-color-from-palette($canvas-accent-palette, 400);
    $canvas-accent-palette-A200: mat.get-color-from-palette($canvas-accent-palette, 'A200');
    $warn-palette-200: mat.get-color-from-palette($warn-palette, 200);
    $warn-palette-300: mat.get-color-from-palette($warn-palette, 300);
    $warn-palette-A100: mat.get-color-from-palette($warn-palette, 'A100');
    $warn-palette-A400: mat.get-color-from-palette($warn-palette, 'A400');

    a {
        color: $accent-palette-A400;
        text-decoration-color: $primary-palette-200;
    }

    a:hover {
        text-decoration-color: $accent-palette-A400;
    }

    .tooltip {
        background-color: $canvas-primary-palette-900;
        border-color: $canvas-primary-palette-200;
        box-shadow: 0 2px 5px $canvas-primary-palette-50;
        color: $canvas-primary-palette-200;
    }

    .property-editor {
        background-color: $canvas-primary-palette-900;
        box-shadow: 0 2px 5px $canvas-primary-palette-50;
    }

    .disabled {
        color: $primary-palette-500 !important;
        fill: $primary-palette-500 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .enabled {
        color: $accent-palette-A200 !important;
        fill: $accent-palette-A200 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .stopped {
        color: $warn-palette-200 !important;
        fill: $warn-palette-200 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .running {
        color: $canvas-accent-palette-200 !important;
        fill: $canvas-accent-palette-200 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .has-errors,
    .invalid {
        color: $canvas-accent-palette-A200 !important;
        fill: $canvas-accent-palette-A200 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .validating {
        color: $canvas-primary-palette-400 !important;
        fill: $canvas-primary-palette-400 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .transmitting {
        color: $accent-palette-A200 !important;
        fill: $accent-palette-A200 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .not-transmitting {
        color: $primary-palette-500 !important;
        fill: $primary-palette-500 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .up-to-date {
        color: $canvas-accent-palette-400 !important;
        fill: $canvas-accent-palette-400 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .locally-modified,
    .sync-failure {
        color: $warn-palette-A100 !important;
        fill: $warn-palette-A100 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .stale,
    .locally-modified-and-stale {
        color: $warn-palette-300 !important;
        fill: $warn-palette-300 !important;
        text-shadow: 0 0 4px $canvas-primary-palette-900;
    }

    .zero {
        color: $accent-palette-A100 !important;
        fill: $accent-palette-A100 !important;
        text-shadow: none !important;
    }

    .blank,
    .unset,
    .sensitive {
        color: $canvas-primary-palette-400 !important;
    }

    button.nifi-button {
        border: 1px solid $primary-palette-200;
        background-color: $primary-palette-50;
        color: $accent-palette-A400;
    }

    button.nifi-button:hover {
        border-color: $accent-palette-A400;
    }

    button:disabled {
        color: $primary-palette-200 !important;
        cursor: not-allowed;
    }

    button.nifi-button:disabled {
        border: 1px solid $primary-palette-200;

        i {
            color: $primary-palette-200 !important;
        }
    }

    .value,
    .refresh-timestamp {
        color: $warn-palette-A400;
    }
}
