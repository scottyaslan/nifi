/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use '@angular/material' as mat;

// Plus imports for other components in your app.
@use 'roboto-fontface/css/roboto/roboto-fontface.css';
@use 'assets/fonts/flowfont/flowfont.css';
@use 'font-awesome/css/font-awesome.min.css';
@use 'codemirror/lib/codemirror.css';
@use 'codemirror/addon/hint/show-hint.css';

@import '../src/assets/color-palette';

$fontPrimary: 'Roboto', sans-serif;
$fontSecondary: 'Robot Slab', sans-serif;
$fontMedium: 'Roboto Medium', sans-serif;
$fontLight: 'Roboto Light', sans-serif;

$appFontPath: '~roboto-fontface/fonts';

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 300;
    src:
        local('Roboto Light'),
        local('Roboto-Light'),
        url('#{$appFontPath}/roboto/Roboto-Light.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto';
    font-style: italic;
    font-weight: 300;
    src:
        local('Roboto LightItalic'),
        local('Roboto-LightItalic'),
        url('#{$appFontPath}/roboto/Roboto-LightItalic.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: normal;
    src:
        local('Roboto Regular'),
        local('Roboto-Regular'),
        url('#{$appFontPath}/roboto/Roboto-Regular.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: 500;
    src:
        local('Roboto Medium'),
        local('Roboto-Medium'),
        url('#{$appFontPath}/roboto/Roboto-Medium.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto';
    font-style: normal;
    font-weight: bold;
    src:
        local('Roboto Bold'),
        local('Roboto-Bold'),
        url('#{$appFontPath}/roboto/Roboto-Bold.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto';
    font-style: italic;
    font-weight: normal;
    src:
        local('Roboto Italic'),
        local('Roboto-Italic'),
        url('#{$appFontPath}/roboto/Roboto-RegularItalic.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto Slab';
    font-style: normal;
    font-weight: normal;
    src:
        local('RobotoSlab Regular'),
        local('RobotoSlab-Regular'),
        url('#{$appFontPath}/roboto-slab/Roboto-Slab-Regular.woff2') format('woff2');
}

@font-face {
    font-family: 'Roboto Slab';
    font-style: normal;
    font-weight: bold;
    src:
        local('RobotoSlab Bold'),
        local('RobotoSlab-Bold'),
        url('#{$appFontPath}/roboto-slab/Roboto-Slab-Bold.woff2') format('woff2');
}

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

@tailwind base;
@tailwind components;
@tailwind utilities;

$nifi-primary-palette: (
    50: var(--primary-light-50),
    100: var(--primary-light-100),
    200: var(--primary-light-200),
    300: var(--primary-light-300),
    400: var(--primary-light-400),
    500: var(--primary-light-500),
    600: var(--primary-light-600),
    700: var(--primary-light-700),
    800: var(--primary-light-800),
    900: var(--primary-light-900),
    A100: var(--primary-light-A100),
    A200: var(--primary-light-A200),
    A400: var(--primary-light-A400),
    A700: var(--primary-light-A700),
    contrast: (
        50: var(--primary-light-contrast-50),
        100: var(--primary-light-contrast-100),
        200: var(--primary-light-contrast-200),
        300: var(--primary-light-contrast-300),
        400: var(--primary-light-contrast-400),
        500: var(--primary-light-contrast-500),
        600: var(--primary-light-contrast-600),
        700: var(--primary-light-contrast-700),
        800: var(--primary-light-contrast-800),
        900: var(--primary-light-contrast-900),
        A100: var(--primary-light-contrast-A100),
        A200: var(--primary-light-contrast-A200),
        A400: var(--primary-light-contrast-A400),
        A700: var(--primary-light-contrast-A700)
    )
);

$nifi-accent-palette: (
    50: var(--accent-light-50),
    100: var(--accent-light-100),
    200: var(--accent-light-200),
    300: var(--accent-light-300),
    400: var(--accent-light-400),
    500: var(--accent-light-500),
    600: var(--accent-light-600),
    700: var(--accent-light-700),
    800: var(--accent-light-800),
    900: var(--accent-light-900),
    A100: var(--accent-light-A100),
    A200: var(--accent-light-A200),
    A400: var(--accent-light-A400),
    A700: var(--accent-light-A700),
    contrast: (
        50: var(--accent-light-contrast-50),
        100: var(--accent-light-contrast-100),
        200: var(--accent-light-contrast-200),
        300: var(--accent-light-contrast-300),
        400: var(--accent-light-contrast-400),
        500: var(--accent-light-contrast-500),
        600: var(--accent-light-contrast-600),
        700: var(--accent-light-contrast-700),
        800: var(--accent-light-contrast-800),
        900: var(--accent-light-contrast-900),
        A100: var(--accent-light-contrast-A100),
        A200: var(--accent-light-contrast-A200),
        A400: var(--accent-light-contrast-A400),
        A700: var(--accent-light-contrast-A700)
    )
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$nifi-primary: mat.define-palette($nifi-primary-palette);
$nifi-accent: mat.define-palette($nifi-accent-palette);

//#728e9b
//#aabbc3
//#e3e8eb

// The warn palette is optional (defaults to red).
$nifi-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$nifi-theme: mat.define-light-theme(
    (
        color: (
            primary: $nifi-primary,
            accent: $nifi-accent,
            warn: $nifi-warn
        ),
        //typography: mat.define-typography-config(),
        density: -3
    )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($nifi-theme);

/* You can add global styles to this file, and also import other style files */

html,
body {
    height: 100%;
}

body {
    margin: 0;
    font-family: Roboto, 'Helvetica Neue', sans-serif;
}

a {
    font-size: 13px;
    cursor: pointer;
    color: #004849;
    font-weight: normal;
    display: inline-block;
    font-family: Roboto;
    text-decoration: underline;
    text-decoration-color: #ccdadb;
    text-underline-offset: 3px;
}

a:hover {
    text-decoration-color: #004849;
}

/*
    Icon for styling mat-icon in forms throughout the application.
 */

.info-icon {
    font-size: 14px;
    height: 14px !important;
    width: 14px !important;
}

/*
    This style is needed due to an incompatibility between material and tailwind.
 */

.mdc-notched-outline__notch {
    border-right: none;
}

/*
    Dialog styles
 */

.small-dialog {
    min-width: 320px;
}

.medium-dialog {
    min-width: 470px;
}

.medium-short-dialog {
    max-height: 32%;
    max-width: 34%;
    min-height: 250px;
    min-width: 440px;
    font-size: 13px;
}

.large-dialog {
    max-height: 72%;
    max-width: 55%;
    min-height: 560px;
    min-width: 760px;
}

.edit-parameter-context-dialog {
    max-height: 72%;
    max-width: 55%;
    min-width: 850px;
    min-height: 575px;
}

.tooltip {
    position: fixed;
    max-width: 500px;
    padding: 10px;
    background-color: #fff;
    border-radius: 2px;
    border-width: 1px;
    border-color: #000;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
    font-size: 13px;
    font-family: Roboto;
    font-weight: 400;
    word-wrap: break-word;
    white-space: normal;
    color: #000;
    z-index: 1;

    ul {
        list-style: disc outside;
        margin-left: 1em;
    }
}

.property-editor {
    background-color: #fff;
    box-shadow: 0 2px 5px rgba(0, 0, 0, 0.25);
    font-size: 13px;
    font-family: Roboto;
    font-weight: 400;
}

.CodeMirror-hints {
    font-size: 13px !important;
    z-index: 1000 !important;
    overflow-y: scroll !important;
}

/*
    General status styles. TODO - Reconsider this... separating canvas/style styles from html styles...
 */

.disabled {
    color: #728e9b !important;
    fill: #728e9b !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.enabled {
    color: #44a3cf !important;
    fill: #44a3cf !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.stopped {
    color: #d18686 !important;
    fill: #d18686 !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.running {
    color: #7dc7a0 !important;
    fill: #7dc7a0 !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.has-errors,
.invalid {
    color: #cf9f5d !important;
    fill: #cf9f5d !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.validating {
    color: #a8a8a8 !important;
    fill: #a8a8a8 !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.transmitting {
    color: #44a3cf !important;
    fill: #44a3cf !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.not-transmitting {
    color: #728e9b !important;
    fill: #728e9b !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.up-to-date {
    color: #3da67a !important;
    fill: #3da67a !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.locally-modified,
.sync-failure {
    color: #747474 !important;
    fill: #747474 !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.stale,
.locally-modified-and-stale {
    color: #c7685d !important;
    fill: #c7685d !important;
    text-shadow: 0 0 4px rgba(255, 255, 255, 1);
}

.zero {
    color: #aabec7 !important;
    fill: #aabec7 !important;
    text-shadow: none !important;
}

.blank,
.unset,
.sensitive {
    font-weight: normal !important;
    color: #a8a8a8 !important;
}

button.nifi-button {
    height: 28px;
    width: 28px;
    line-height: 28px;
    border: 1px solid #ccdadb;
    background-color: rgba(249, 250, 251, 0.97);
    color: #004849;
}

button.nifi-button:hover {
    cursor: pointer;
    border-color: #004849;
}

button.nifi-button:disabled {
    cursor: not-allowed;
    border: 1px solid #ccdadb;

    i {
        color: #ccdadb !important;
    }
}

.pointer {
    cursor: pointer;
}

.value,
.refresh-timestamp {
    font-weight: 500;
    color: #775351;
}

@mixin buttons-theme($theme) {
    .mat-mdc-raised-button {
        height: 34px;
        font-family: $fontPrimary;
        font-weight: lighter;
        font-size: 14px;
        text-transform: uppercase;
        line-height: normal;
        box-shadow: 0 0 0 0 rgba(0 0 0 / 20%), 0 0 0 0 rgba(0 0 0 / 14%), 0 0 0 0 rgba(0 0 0 / 12%);
        border-radius: 2px;
        min-width: 88px;
    }
}

@mixin global-menu-buttons-theme($theme) {
    button.global-menu-item {
        .fa,
        .icon {
            text-align: start;
            color: var(--primary-light-500);
        }
    }
}

@mixin table-theme($theme) {
    .listing-table {
        table {
            width: 100%;
            table-layout: fixed;

            td,
            th {
                max-width: 300px;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
                padding: 0 8px;
            }

            th {
                background-color: var(--primary-light-500);
                color: #fff;
            }

            tr:hover {
                background-color: #E3F2FF !important;
            }

            .selected {
                background-color: #E3F2FF !important;
            }

            .even {
                background-color: #f4f6f7;
            }

            .fa,
            .icon {
                color: #616161;
                width: 10px;
                height: 14px;
                text-align: center;
            }

            .mat-column-moreDetails {
                min-width: 30px;
            }

            .mat-column-actions {
                min-width: 115px;
            }
        }

        .mat-mdc-table .mdc-data-table__header-row {
            height: 36px;
        }

        .mat-mdc-table .mdc-data-table__row {
            height: 59px;
        }
    }

    ::ng-deep .mat-sort-header-arrow {
        color: #fff;
    }

    ::ng-deep .mat-sort-header-content {
        overflow: hidden;
    }

}

@include global-menu-buttons-theme($nifi-theme);
@include table-theme($nifi-theme);
@include buttons-theme($nifi-theme);
